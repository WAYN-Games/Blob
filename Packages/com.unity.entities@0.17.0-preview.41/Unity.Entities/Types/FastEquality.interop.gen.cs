
//------------------------------------------------------------------------------
// <auto-generated>
//     This file was automatically generated by Unity.Entities.Editor.BurstInteropCodeGenerator
//     Any changes you make here will be overwritten
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     To update this file, use the "DOTS -> Regenerate Burst Interop" menu option.
//
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Unity.Burst;
using Unity.Collections;
using System.Runtime.InteropServices;

namespace Unity.Entities
{
    public unsafe partial struct FastEquality
    {

#if !UNITY_IOS

        [BurstDiscard]
        private static void CheckDelegate(ref bool useDelegate)
        {
            //@TODO: This should use BurstCompiler.IsEnabled once that is available as an efficient API.
            useDelegate = true;
        }

        private static bool UseDelegate()
        {
            bool result = false;
            CheckDelegate(ref result);
            return result;
        }

        static class Managed
        {
            public static bool _initialized = false;

            public delegate int _dlg_Hash32(IntPtr input, uint len);
            public static _dlg_Hash32 _bfp_Hash32;
        }


#endif

        [NotBurstCompatible]
        internal static void Initialize()
        {
#if !UNITY_IOS
            if (Managed._initialized)
                return;
            Managed._initialized = true;
            Managed._bfp_Hash32 = BurstCompiler.CompileFunctionPointer<Managed._dlg_Hash32>(_mono_to_burst_Hash32).Invoke;

#endif
        }

        private  static int Hash32 (byte* input, uint len)
        {
#if !UNITY_IOS
            if (UseDelegate())
            {
                var _retval = default(int);
                _forward_mono_Hash32(ref _retval, input, len);
                return _retval;
            }
#endif

            return _Hash32(input, len);
        }

#if !UNITY_IOS
        [BurstCompile]
        [MonoPInvokeCallback(typeof(Managed._dlg_Hash32))]
        private static int _mono_to_burst_Hash32(IntPtr input, uint len)
        {
            return _Hash32((byte*)input, len);
        }

        [BurstDiscard]
        private static void _forward_mono_Hash32(ref int _retval, byte* input, uint len)
        {
            _retval = Managed._bfp_Hash32((IntPtr) input, len);
        }
#endif




    }
}
